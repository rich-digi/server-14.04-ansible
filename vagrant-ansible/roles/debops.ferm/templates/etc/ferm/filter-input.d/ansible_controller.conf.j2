# This file is managed by Ansible, all changes will be lost

# Allow SSH connections from Ansible Controller
{#

List of parameters:

Required:
  ansible_controller      IP address in CIDR format of Ansible Controller
                          detected automatically by 'common.yml' playbook

#}

{% set ferm_tpl_local_ansible_controllers = [] %}
{% if ((ansible_local is defined and ansible_local) and
       (ansible_local.ferm is defined and ansible_local.ferm) and
       (ansible_local.ferm.ansible_controllers is defined and ansible_local.ferm.ansible_controllers)) %}
{%   for element in ansible_local.ferm.ansible_controllers %}
{%     set _ = ferm_tpl_local_ansible_controllers.append(element) %}
{%   endfor %}
{% endif %}
{% if ferm_ansible_controllers is defined and ferm_ansible_controllers %}
{%   for element in ferm_ansible_controllers %}
{%     if element not in ferm_tpl_local_ansible_controllers %}
{%       set _ = ferm_tpl_local_ansible_controllers.append(element) %}
{%     endif %}
{%   endfor %}
{% endif %}
{% if ansible_controller is defined and ansible_controller %}
{%   if ansible_controller not in ferm_tpl_local_ansible_controllers %}
{%     set _ = ferm_tpl_local_ansible_controllers.append(ansible_controller) %}
{%   endif %}
{% endif %}
{% set ferm_tpl_local_ansible_controllers_result = ferm_tpl_local_ansible_controllers | unique | sort %}
{% if ferm_tpl_local_ansible_controllers_result is defined and ferm_tpl_local_ansible_controllers_result %}
protocol tcp dport ssh {
	@def $ITEMS = ( @ipfilter( ({{ ferm_tpl_local_ansible_controllers_result | unique | join(" ") }}) ) );
	@if @ne($ITEMS,"") {
		saddr $ITEMS ACCEPT;
	}
}
{% else %}
# ansible_controller is not set, but this shouldn't be here.
# Something went wrong, re-run the 'ferm' role.
{% endif %}


