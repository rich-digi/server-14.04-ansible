---

- name: Create realm destination directories
  file:
    path: '{{ pki_base_path + "/" + item.destination + "/templates" }}'
    state: 'directory'
    owner: '{{ pki_owner }}'
    group: '{{ pki_public_group }}'
    mode: '{{ pki_public_dir_mode }}'
  with_items: pki_realms
  when: (item.source is defined and item.destination is defined)

- name: Generate main Makefile
  template:
    src: 'etc/pki/Makefile.j2'
    dest: '{{ pki_base_path + "/Makefile" }}'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: Generate realm Makefile
  template:
    src: 'etc/pki/realm/Makefile.j2'
    dest: '{{ pki_base_path + "/" + item.destination + "/Makefile" }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_items: pki_realms
  when: ((item.source is defined and item.destination is defined) and
         (item.makefile is undefined or (item.makefile is defined and item.makefile)))

- name: Regenerate Diffie-Hellman parameters periodically
  cron:
    name: 'Regenerate Diffie-Hellman parameters in all PKI realms'
    special_time: '{{ pki_dhparams_regenerate_frequency }}'
    state: 'present'
    user: 'root'
    job: 'cd {{ pki_base_path }} ; make regenerate-dhparams > /dev/null 2>&1'
    cron_file: 'pki-regenerate-dhparams'
  when: pki_dhparams_regenerate is defined and pki_dhparams_regenerate

- name: Disable periodic DHparams regeneration
  cron:
    name: 'Regenerate Diffie-Hellman parameters in all PKI realms'
    cron_file: 'pki-regenerate-dhparams'
    state: 'absent'
  when: pki_dhparams_regenerate is defined and not pki_dhparams_regenerate

- name: Create realm source directories
  file:
    path: '{{ pki_base_src + "/realms/" + item.0.source + "/" + item.1 }}'
    state: 'directory'
  sudo: False
  delegate_to: 'localhost'
  with_nested:
    - pki_realms
    - [ 'CA', 'certs', 'private', 'revoked' ]
  when: item.0.source is defined and item.0.destination is defined

- name: Create routes directory
  file:
    path: '{{ pki_base_src + "/routes" }}'
    state: 'directory'
  sudo: False
  run_once: True
  delegate_to: 'localhost'

- name: Delete routing scripts if requested
  file:
    path: '{{ pki_base_src + "/routes/" + (item.name | replace(".","_")) }}'
    state: 'absent'
  sudo: False
  delegate_to: 'localhost'
  with_items: pki_routes
  when: ((item.name is defined and item.name) and
         (item.delete is defined and item.delete))

- name: Create certificate routing scripts
  template:
    src: 'secret/pki/routes/route.j2'
    dest: '{{ pki_base_src + "/routes/" + (item.name | replace(".","_")) }}'
    mode: '0755'
  with_items: pki_routes
  sudo: False
  delegate_to: 'localhost'
  when: ((item.name is defined and item.name) and
         (item.delete is undefined or (item.delete is defined and not item.delete)))

